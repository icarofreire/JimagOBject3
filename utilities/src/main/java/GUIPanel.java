/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jimagobject.utilities;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.image.BufferedImage;

import jimagobject.utilities.ReadImages;
import jimagobject.utilities.EdgeDetector;

public final class GUIPanel {

    private BufferedImage image;
    private BufferedImage imageEdgeDetect;
    private String title = "Imagem com edge detection";
    private final EdgeDetector edge = new EdgeDetector();
    private int width = 1080; // << default;
    private int height = 700; // << default;
    private final int esp = 10;

    public void setImage(BufferedImage image) {
        this.image = image;
        /** \/ aplicação do edge detection; */
        this.imageEdgeDetect = edge.apply(image).getImage();

        /**
         * painel:
         * --------------------------------
         * |   img1     |esp|    img2   |
         * |            |   |           |
         * --------------------------------
         */
        width = (image.getWidth()+esp) + ((imageEdgeDetect != null) ? (imageEdgeDetect.getWidth()) : (0));
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public void display() {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame frame = new JFrame(title);
                frame.add(new ImgPanel());
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setSize(width, height);
                frame.setVisible(true);
            }
        });
    }

    public class ImgPanel extends JPanel {

        public ImgPanel() {
            setBackground(Color.BLACK);
        }

        @Override
        public Dimension getPreferredSize() {
            return new Dimension(width, height);
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(image, 0, 0, this);
            if(imageEdgeDetect != null){
                g.drawImage(imageEdgeDetect, image.getWidth()+esp, 0, this);
            }
            // g.dispose();
        }

    }

}