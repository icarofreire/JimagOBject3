/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jimagobject.utilities;

import java.io.File;
import java.io.FileWriter;
import java.util.HashSet;
import java.util.HashMap;
import java.util.TreeMap;
import java.util.Map;
import java.util.TreeSet;
import java.util.Vector;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import jimagobject.utilities.ReadImages;
import jimagobject.utilities.Picture;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.nio.file.Path;
import java.nio.file.Paths;

public final class WriteObj {

    public void getVertex() {
        ReadImages read = new ReadImages();
        // read.read(new File("/home/icaro/Downloads/dicom/ABDOMEN/VOL_ARTERIAL_0004"));
        // read.read(new File("/home/icaro/Downloads/dicom/teste/teste2"));
        read.read(new File("/home/icaro/Downloads/dicom/teste/teste3"));
        Vector<byte[]> vbytesImages = read.getVbytesImages();

        long rows = read.getRows();
        long columns = read.getColumns();
        double sliceThickness = read.getSliceThickness();


        String fObj = "teste.obj";
        File logCheck = new File(fObj);
        FileWriter myWriter = null;
        try {
            myWriter = new FileWriter(fObj, false);
        } catch (IOException e) { e.printStackTrace(); }

        // /** \/ aplicação do edge detection; */
        int z = 0;

        double spaceBetweenLayers = 0.005;
        double xCoordScale = 0.01;
        double yCoordScale = 0.01;
        EdgeDetector edge = new EdgeDetector();
        for(byte[] pixels : vbytesImages){
            Picture picEdgeDetect = edge.apply(pixels);
            for (int y = 1; y < picEdgeDetect.height() - 1; y++) {
                for (int x = 1; x < picEdgeDetect.width() - 1; x++) {

                    Color cor = picEdgeDetect.get(x, y);
                    int argb = picEdgeDetect.getRGB(x, y);
                    int alpha =  (argb >> 24) & 0xFF;
                    if (alpha == 255 && cor.equals(Color.black) ){
                        // x y z;
                        if(myWriter != null){
                            try {
                                myWriter.write("v " + (x) + " " + (y) + " " + z + "\n");
                            } catch (IOException e) { e.printStackTrace(); }
                        }
                    }
                }
            }
            z += 1;
        }
        try {
            myWriter.close();
        } catch (IOException e) { e.printStackTrace(); }

        // Picture pic = new Picture(vbytesImages.get(0));
        // pic.display();

        // /**\/ testes de leitura de imagens; */
        // try{
        //     Path source = Paths.get("/home/icaro/Imagens/galen.jpg");
        //     BufferedImage bi = ImageIO.read(source.toFile());
        //     // convert BufferedImage to byte[]
        //     // ByteArrayOutputStream baos = new ByteArrayOutputStream();
        //     // ImageIO.write(bi, "jpg", baos);
        //     // byte[] bytes = baos.toByteArray();

        //     Picture pic = new Picture(bi);
        //     pic.display();
        // }catch(IOException e){
        //     e.printStackTrace();
        // }

        // double z = 0.0;
        // for(byte[] pixels : vbytesImages){

        //     int conr = 0;
        //     int y = 0;
        //     int x = -1;
        //     for(int i=0; i<pixels.length; i+=3){
        //         conr++;
        //         x++;

        //         if(conr >= columns){
        //             y++;
        //             x = 0;
        //             conr=0;
        //         }

        //         // x y z;
        //         if(myWriter != null){
        //             try {
        //                 myWriter.write("v " + x + " " + y + " " + z + "\n");
        //             } catch (IOException e) { e.printStackTrace(); }
        //         }   
        //     }
        //     z += 1;
        // }
        // try {
        //     myWriter.close();
        // } catch (IOException e) { e.printStackTrace(); }

    }

}