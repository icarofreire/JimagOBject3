/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jimagobject.utilities;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import javax.imageio.ImageIO;

import jimagobject.utilities.ReadImages;

public final class ImgProcess {

    // convert byte[] back to a BufferedImage
    public BufferedImage byteToBufferedImage(byte[] bytes) {
        BufferedImage newBi = null;
        try{
            InputStream is = new ByteArrayInputStream(bytes);
            newBi = ImageIO.read(is);
        }catch(IOException e){}
        return newBi;
    }

    /** convert to grayscale; */
    /** https://dyclassroom.com/image-processing-project/how-to-convert-a-color-image-into-grayscale-image-in-java; */
    public void convertToGrayscale(int[][] img, int height, int width){
        for(int y = 0; y < height; y++){
            for(int x = 0; x < width; x++){
                // int p = img.getRGB(x,y);
                int p = img[y][x];

                int a = (p>>24)&0xff;
                int r = (p>>16)&0xff;
                int g = (p>>8)&0xff;
                int b = p&0xff;

                //calculate average
                int avg = (r+g+b)/3;

                //replace RGB value with avg
                p = (a<<24) | (avg<<16) | (avg<<8) | avg;

                // img.setRGB(x, y, p);
                img[y][x] = p;
            }
        }
    }

    /** f x: int[] -> int[][];
     * return int[][];
    */
    public byte[][] oneDTo2D(byte array1d[], int dimensionTo2D){
        final int d = dimensionTo2D;
        final byte array2d[][] = new byte[d][d];

        int cur = 0;
        for(int i=0; i<d;i++){
            for(int j=0;j<d;j++){
                if(cur < array1d.length) array2d[i][j] = array1d[cur++];
            }
        }
        return array2d;
    }

    public void getRGBPixel(int pixel) {
        int p = pixel;
        int a = (p>>24)&0xff;
        int r = (p>>16)&0xff;
        int g = (p>>8)&0xff;
        int b = p&0xff;
    }

}